// // package com.emotionaltouch;

// // // Import SplashScreen
// // // import org.devio.rn.splashscreen.SplashScreen;

// // import android.content.Intent;
// // import android.net.Uri;
// // import android.os.Bundle;

// // import com.facebook.react.ReactActivity;
// // import com.facebook.react.ReactActivityDelegate;
// // import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;
// // import com.facebook.react.defaults.DefaultReactActivityDelegate;

// // public class MainActivity extends ReactActivity {

// //   @Override
// //   protected void onCreate(Bundle savedInstanceState) {
// //     // Show Splash Screen (if used)
// //     // SplashScreen.show(this, R.style.SplashScreen_Fullscreen, true);

// //     // Pass savedInstanceState instead of null
// //     super.onCreate(savedInstanceState);

// //     // Handle App Links (Deep Linking)
// //     Intent appLinkIntent = getIntent();
// //     if (appLinkIntent != null) {
// //       String appLinkAction = appLinkIntent.getAction();
// //       Uri appLinkData = appLinkIntent.getData();

// //       if (appLinkData != null) {
// //         // Handle deep link data if needed
// //         String deepLinkUrl = appLinkData.toString();
// //         System.out.println("Deep Link URL: " + deepLinkUrl);
// //       }
// //     }
// //   }

// //   /**
// //    * Returns the name of the main component registered from JavaScript. This is used to schedule
// //    * rendering of the component.
// //    */
// //   @Override
// //   protected String getMainComponentName() {
// //     return "emotionaltouch";
// //   }

// //   /**
// //    * Returns the instance of the {@link ReactActivityDelegate}. Here we use a util class {@link
// //    * DefaultReactActivityDelegate} which allows you to easily enable Fabric and Concurrent React
// //    * (aka React 18) with two boolean flags.
// //    */
// //   @Override
// //   protected ReactActivityDelegate createReactActivityDelegate() {
// //     return new DefaultReactActivityDelegate(
// //         this,
// //         getMainComponentName(),
// //         // Enable Fabric Renderer if opted-in for the New Architecture.
// //         DefaultNewArchitectureEntryPoint.getFabricEnabled()
// //     );
// //   }
// // }


// package com.emotionaltouch

// import com.facebook.react.ReactActivity
// import com.facebook.react.ReactActivityDelegate
// import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.fabricEnabled
// import com.facebook.react.defaults.DefaultReactActivityDelegate

// class MainActivity : ReactActivity() {

//   /**
//    * Returns the name of the main component registered from JavaScript. This is used to schedule
//    * rendering of the component.
//    */  
//     //react-native-screens override
//     override fun onCreate(savedInstanceState: Bundle?) {
//       super.onCreate(savedInstanceState);
//     }
//   override fun getMainComponentName(): String = "emotionaltouch"

//   /**
//    * Returns the instance of the [ReactActivityDelegate]. We use [DefaultReactActivityDelegate]
//    * which allows you to enable New Architecture with a single boolean flags [fabricEnabled]
//    */
//   override fun createReactActivityDelegate(): ReactActivityDelegate =
//       DefaultReactActivityDelegate(this, mainComponentName, fabricEnabled)
// }

package com.emotionaltouch

import android.app.Application
import com.facebook.react.PackageList
import com.facebook.react.ReactApplication
import com.facebook.react.ReactHost
import com.facebook.react.ReactNativeHost
import com.facebook.react.ReactPackage
import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load
import com.facebook.react.defaults.DefaultReactHost.getDefaultReactHost
import com.facebook.react.defaults.DefaultReactNativeHost
import com.facebook.react.soloader.OpenSourceMergedSoMapping
import com.facebook.soloader.SoLoader

class MainApplication : Application(), ReactApplication {

  override val reactNativeHost: ReactNativeHost =
      object : DefaultReactNativeHost(this) {
        override fun getPackages(): List<ReactPackage> =
            PackageList(this).packages.apply {
              // Packages that cannot be autolinked yet can be added manually here, for example:
              // add(MyReactNativePackage())
            }

        override fun getJSMainModuleName(): String = "index"

        override fun getUseDeveloperSupport(): Boolean = BuildConfig.DEBUG

        override val isNewArchEnabled: Boolean = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED
        override val isHermesEnabled: Boolean = BuildConfig.IS_HERMES_ENABLED
      }

  override val reactHost: ReactHost
    get() = getDefaultReactHost(applicationContext, reactNativeHost)

  override fun onCreate() {
    super.onCreate()
    SoLoader.init(this, OpenSourceMergedSoMapping)
    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {
      // If you opted-in for the New Architecture, we load the native entry point for this app.
      load()
    }
  }
}